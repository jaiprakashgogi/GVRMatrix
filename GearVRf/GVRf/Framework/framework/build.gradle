import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.library'

android {
    compileSdkVersion 21
    buildToolsVersion '23.0.3'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 19

        ndk {
            moduleName "gvrf"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
    }

    sourceSets.main {
        java.srcDirs = ['src/main/java']
        jni.srcDirs = [] // no auto generation of Android.mk
        jniLibs.srcDir 'src/main/libs' // pre-compiled libraries
    }

    task buildNative(type: Exec) {
        if (rootProject.hasProperty("OVR_MOBILE_SDK")) {
            environment 'OVR_MOBILE_SDK', rootProject.property("OVR_MOBILE_SDK")
        }

        def ndkbuild = ""
        if (rootProject.hasProperty("ANDROID_NDK_HOME")) {
            ndkbuild = rootProject.property("ANDROID_NDK_HOME")
            ndkbuild += '/'
        }
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            ndkbuild += 'ndk-build.cmd'
        } else {
            ndkbuild += '/Users/jaiprakashgogi/Library/Android/sdk/ndk-bundle/ndk-build'
        }

        if (rootProject.hasProperty("OVR_MOBILE_SDK")) {
            environment 'OVR_MOBILE_SDK', rootProject.property("OVR_MOBILE_SDK")
        }

        commandLine ndkbuild, '-C', file('src/main').absolutePath, '-j', 16//, 'NDK_DEBUG=1'
    }

    task cleanNative(type: Exec) {
        def ndkbuild = ""
        if (rootProject.hasProperty("ANDROID_NDK_HOME")) {
            ndkbuild = rootProject.property("ANDROID_NDK_HOME")
            ndkbuild += '/'
        }
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            ndkbuild += 'ndk-build.cmd'
        } else {
            ndkbuild += '/Users/jaiprakashgogi/Library/Android/sdk/ndk-bundle/ndk-build'
        }

        if (rootProject.hasProperty("OVR_MOBILE_SDK")) {
            environment 'OVR_MOBILE_SDK', rootProject.property("OVR_MOBILE_SDK")
        }
        commandLine ndkbuild, '-C', file('src/main').absolutePath, '-j', 16, 'clean'
    }

    clean.dependsOn 'cleanNative'

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn buildNative
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile fileTree(dir: 'src/main/libs', include: ['*.jar'])
}
